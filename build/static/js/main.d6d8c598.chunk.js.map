{"version":3,"sources":["images/logo.svg","components/Hero.js","components/Banner.js","components/Title.js","components/Services.js","pages/Home.js","pages/Error.js","pages/SingleRoom.js","pages/Rooms.js","components/Navbar.js","App.js","serviceWorker.js","Context.js","index.js"],"names":["module","exports","Hero","children","hero","className","Banner","title","subtitle","defaultProps","Title","Services","state","services","icon","info","this","map","item","index","key","Component","Home","to","Error","SingleRoom","Rooms","Navbar","isOpen","handleToggle","setState","src","logo","alt","type","onClick","App","exact","path","component","Boolean","window","location","hostname","match","RoomContext","React","createContext","RoomProvider","provider","value","props","Consumer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6d8c598.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9f0cccc1.svg\";","import React from 'react'\n\nexport default function Hero({children, hero}) {\n    return (\n    <header className={hero}>{children}</header>\n    )\n}\n\nHero.defaultProps = {\n    hero: \"defaultHero\"\n}\n","import React from 'react'\n\nexport default function Banner({children,title,subtitle}) {\n    return (\n        <div className=\"banner\">\n            <h1>{title}</h1>\n            <div></div>\n            <p>{subtitle}</p>\n            {children}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Title({title}) {\n    return (\n        <div className=\"section-title\">\n           <h1>{title}</h1> \n           <div />\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport {FaCocktail, FaHiking, FaShuttleVan, FaBeer} from \"react-icons/fa\";\nimport Title from './Title'\n\nexport default class Services extends Component {\n    state = {\n        services: [\n            {\n                icon: <FaCocktail/>,\n                title: \"free cocktails\",\n                info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni, corporis!\"\n            },\n            {\n                icon: <FaHiking/>,\n                title: \"Endless Hiking\",\n                info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni, corporis!\"\n            },\n            {\n                icon: <FaShuttleVan/>,\n                title: \"Free Shuttle\",\n                info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni, corporis!\"\n            },\n            {\n                icon: <FaBeer/>,\n                title: \"Strongest Beer\",\n                info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni, corporis!\"\n            }\n        ]\n    }\n    render() {\n        return (\n            <section className=\"services\">\n                <Title title=\"services\"/>\n                <div className=\"services-center\">\n                {this.state.services.map((item, index) => {\n                    return <article key={index} className=\"service\" >\n                        <span>{item.icon}</span>\n                        <h6>{item.title}</h6>\n                        <p>{item.info}</p>\n                    </article>\n                })}\n                </div>\n            </section>\n        )\n    }\n}\n","import React from 'react'\nimport Hero from '../components/Hero'\nimport Banner from '../components/Banner'\nimport { Link } from 'react-router-dom'\nimport Services from '../components/Services'\n\nexport default function Home() {\n    return (\n        <>\n    <Hero >\n     <Banner title =\"luxurious rooms\" subtitle=\"deluxe rooms starting at $299\" >\n        <Link to=\"/rooms\" className=\"btn-primary\">\n            our rooms\n        </Link>\n     </Banner>\n    </Hero>\n    <Services />\n    </>\n    )\n}\n","import React from 'react'\nimport Hero from '../components/Hero'\nimport Banner from '../components/Banner'\nimport { Link } from 'react-router-dom'\n\nexport default function Error() {\n    return <Hero>\n        <Banner title=\"404\" subtitle=\"page not found\">\n            <Link to=\"/\" className=\"btn-primary\">\n                return home\n            </Link>\n        </Banner>\n    </Hero>\n}\n","import React, { Component } from 'react'\n\nexport default class SingleRoom extends Component {\n    render() {\n        return (\n            <div>\n                hello from single room\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Hero from '../components/Hero'\nimport Banner from '../components/Banner'\nimport { Link } from 'react-router-dom'\n\nexport default function Rooms() {\n    return <Hero hero=\"roomsHero\">\n        <Banner title=\"our rooms\" >\n            <Link to=\"/\" className=\"btn-primary\">\n                return home\n            </Link>\n        </Banner>\n    </Hero>\n}\n","import React, { Component } from 'react'\nimport logo from '../images/logo.svg'\nimport {FaAlignRight} from 'react-icons/fa'\nimport {Link} from 'react-router-dom'\n\nexport default class Navbar extends Component {\n    state ={\n        isOpen:false\n    }\n    handleToggle = () => {\n        this.setState({isOpen: !this.state.isOpen})\n    }\n    render() {\n        return (\n         <nav className=\"navbar\">\n             <div className=\"nav-center\">\n                <div className=\"nav-header\">\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"Beach Resort\" />\n                    </Link>\n                    <button type=\"button\" className=\"nav-btn\" onClick={this.handleToggle}>\n                        <FaAlignRight className=\"nav-icon\" />\n                    </button>\n                </div>\n                <ul className={this.state.isOpen? \"nav-links show-nav\":\"nav-links\"}>\n                    <li>\n                        <Link to=\"/\" >Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/rooms\" >Rooms</Link>\n                    </li>\n                </ul>\n             </div>\n         </nav>\n        )\n    }\n}\n","import React from 'react';\nimport Home from './pages/Home';\nimport Error from './pages/Error';\nimport SingleRoom from './pages/SingleRoom';\nimport  Rooms  from './pages/Rooms';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom'\nimport Navbar from './components/Navbar';\n\n\nfunction App() {\n  return (\n   <>\n   <Navbar />\n   <Switch>\n   <Route exact path=\"/\" component={Home} />\n   <Route exact path=\"/rooms\" component={Rooms} />\n   <Route exact path=\"/rooms/:slug\" component={SingleRoom} />\n   <Route component={Error} />\n   </Switch>\n   </>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\n\nconst RoomContext = React.createContext(); \n\n class RoomProvider extends Component {\nstate = {}\n    render() {\n        return (\n        <RoomContext.provider value=\"hello\">\n            {this.props.children}\n        </RoomContext.provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport{RoomProvider, RoomConsumer, RoomContext}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { RoomProvider } from './Context';\n\nReactDOM.render(\n  <RoomProvider>\n  <Router>\n    <App />\n  </Router>\n  </RoomProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}